@doc.Sequences
"Lists are simple data structures with a few nice properties, such as strong normalization. However, lists are also ineffective or inefficient for problems that involve deep manipulations, especially in a purely functional context like ABC. Sequences, based on finger trees, offer a simple alternative with constant time manipulations at each end and O(lg(N)) whole-sequence operations (split, append, etc.).
 
 The logic for sequences is highly involved. For this reason, this implementation of sequences will be a transliteration of sequences as implemented in Haskell (cf. [Data.Sequence](http://hackage.haskell.org/package/containers-0.5.5.1/docs/Data-Sequence.html)). These sequences are based on 2-3 finger-trees.
 
 Sequences will use suffix `.v`.
~
