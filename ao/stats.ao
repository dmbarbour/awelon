@doc.stats
"Stats is a sealed structure that tracks a useful triple of values: 
 
  count, sum, sum of squares
 
 From these values, we can compute exact average and variance. Note: AO's use of exact rational numbers may become a performance problem here. (TODO: contemplate use of annotations or modulo arithmetic to control performance.)
 
 The structure is sealed to resist accidental confusions about which value is which, or enable later extension. Developers should mostly use the `.stats` suffix functions to observe the statistics. 
~
@new.stats 0 0 0 pw pw seal.stats

@sealer.stats [%{:stats}]
@unsealer.stats [%{.stats}]
@seal.stats sealer.stats .apply
@unseal.stats unsealer.stats .apply

@doc.add.stats "stats number -- stats"
@add.stats 
 take 
 unseal.stats
 x inc swap 
 x paste .add swap 
 put dup .mul .add 
 pw pw
 seal.stats
@count.stats
 unseal.stats
 x copy p
 seal.stats
 put
@sum.stats
 unseal.stats
 wx x copy p pw
 seal.stats
 put
@sumsq.stats 
 unseal.stats
 wx wx copy pw pw
 seal.stats
 put
@average.stats count.stats 0 gt [0] [averageNZ.stats] if_
@averageNZ.stats count.stats take sum.stats put .div
@variance.stats count.stats 0 gt [0] [varianceNZ.stats] if_
@varianceNZ.stats
 unseal.stats copy seal.stats
 put x take x
 .square paste .div 
 .sub put .div


@test.stats
 new.stats [add.stats] 1 10 enumFromTo
 count.stats 10  assertEQ1 drop
 sum.stats   55  assertEQ1 drop
 sumsq.stats 385 assertEQ1 drop


